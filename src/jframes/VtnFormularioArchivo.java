/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package jframes;

import cjb.ci.CtrlInterfaz;
import cjb.ci.Validaciones;
import clases.Archivo;
import clases.Metodos;
import clases.NodoLista;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import static jframes.VtnPrincipal.nodoSeleccionado;

/**
 *
 * @author Usuario
 */
public class VtnFormularioArchivo extends javax.swing.JDialog
{

    char cadenaRadio = ' ';

    /**
     * Creates new form VtnFormularioArchivo
     */
    public VtnFormularioArchivo(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        Metodos.evitaCopiar(jtextNombreYExt);
        Metodos.evitaPegar(jtextNombreYExt);
        Metodos.evitaCopiar(jtextTamanio);
        Metodos.evitaPegar(jtextTamanio);
        this.setLocationRelativeTo(null);
        jtextTamanio.setEnabled(false);
        btnRadioC.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanelFondo = new javax.swing.JPanel();
        jtextNombreYExt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtextTamanio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        btnRadioC = new javax.swing.JRadioButton();
        btnRadioA = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelFondo.setBackground(new java.awt.Color(220, 230, 244));
        jPanelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtextNombreYExt.setBackground(new java.awt.Color(252, 252, 252));
        jtextNombreYExt.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jtextNombreYExt.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jtextNombreYExtKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtextNombreYExtKeyTyped(evt);
            }
        });
        jPanelFondo.add(jtextNombreYExt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 147, 40));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel1.setText("Creando Archivo...");
        jPanelFondo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel2.setText("Tipo a crear:");
        jPanelFondo.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 150, -1));

        jtextTamanio.setBackground(new java.awt.Color(252, 252, 252));
        jtextTamanio.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jtextTamanio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtextTamanio.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jtextTamanioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt)
            {
                jtextTamanioKeyTyped(evt);
            }
        });
        jPanelFondo.add(jtextTamanio, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 147, 40));

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel6.setText("Tamaño del archivo:");
        jPanelFondo.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 220, -1));

        btnAceptar.setBackground(new java.awt.Color(252, 252, 252));
        btnAceptar.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAceptarActionPerformed(evt);
            }
        });
        btnAceptar.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnAceptarKeyPressed(evt);
            }
        });
        jPanelFondo.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 160, -1));

        buttonGroup1.add(btnRadioC);
        btnRadioC.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnRadioC.setText("C");
        btnRadioC.setToolTipText("Selecciona para crear Carpeta");
        btnRadioC.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                btnRadioCItemStateChanged(evt);
            }
        });
        btnRadioC.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                btnRadioCKeyPressed(evt);
            }
        });
        jPanelFondo.add(btnRadioC, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, -1, -1));

        buttonGroup1.add(btnRadioA);
        btnRadioA.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        btnRadioA.setText("A");
        btnRadioA.setToolTipText("Selecciona para crear Archivo");
        btnRadioA.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                btnRadioAItemStateChanged(evt);
            }
        });
        jPanelFondo.add(btnRadioA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, -1, -1));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        jLabel3.setText("Nombre y extensión del archivo: ");
        jPanelFondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRadioAItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_btnRadioAItemStateChanged
    {//GEN-HEADEREND:event_btnRadioAItemStateChanged
        jtextTamanio.setEnabled(true);
        this.repaint();
    }//GEN-LAST:event_btnRadioAItemStateChanged

    private void btnRadioCKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_btnRadioCKeyPressed
    {//GEN-HEADEREND:event_btnRadioCKeyPressed
        if (evt.getKeyChar() == '\n')
        {
            CtrlInterfaz.cambia(btnRadioA);
        }
    }//GEN-LAST:event_btnRadioCKeyPressed

    private void btnRadioCItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_btnRadioCItemStateChanged
    {//GEN-HEADEREND:event_btnRadioCItemStateChanged
        jtextTamanio.setEnabled(false);
        this.repaint();
    }//GEN-LAST:event_btnRadioCItemStateChanged

    private void btnAceptarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_btnAceptarKeyPressed
    {//GEN-HEADEREND:event_btnAceptarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n')
        {
            btnAceptarActionPerformed(null);
        }
    }//GEN-LAST:event_btnAceptarKeyPressed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAceptarActionPerformed
    {//GEN-HEADEREND:event_btnAceptarActionPerformed
        cadenaRadio = (btnRadioC.isSelected() ? 'C' : 'A');

        if (jtextNombreYExt.getText().matches("[a-zA-Z](\\w?\\.?)*"))
        {
            llenaArchivoDependiendoDeTipo();
        } else
        {
            JOptionPane.showMessageDialog(null, "Nombre del archivo o extención incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void jtextTamanioKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtextTamanioKeyPressed
    {//GEN-HEADEREND:event_jtextTamanioKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n')
        {
            CtrlInterfaz.cambia(btnAceptar);
        }
    }//GEN-LAST:event_jtextTamanioKeyPressed

    private void jtextNombreYExtKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtextNombreYExtKeyPressed
    {//GEN-HEADEREND:event_jtextNombreYExtKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n')
        {
            CtrlInterfaz.cambia(btnRadioC);
        }
    }//GEN-LAST:event_jtextNombreYExtKeyPressed

    private void jtextNombreYExtKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtextNombreYExtKeyTyped
    {//GEN-HEADEREND:event_jtextNombreYExtKeyTyped
        Metodos.validaNombreCarpeta(evt, 15, jtextNombreYExt.getText());
    }//GEN-LAST:event_jtextNombreYExtKeyTyped

    private void jtextTamanioKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jtextTamanioKeyTyped
    {//GEN-HEADEREND:event_jtextTamanioKeyTyped
        Validaciones.validaEntero(evt, 6, jtextTamanio.getText());
    }//GEN-LAST:event_jtextTamanioKeyTyped

    public void llenaArchivoDependiendoDeTipo()
    {
        boolean validaInfo = false;
        int peso = 0;
        if (jtextTamanio.isEnabled())//En caso de que el archivo a registrar sea de tipo archivo
        {
            validaInfo = Metodos.validaCamposVacios(jtextNombreYExt.getText(), jtextTamanio.getText());
            if (validaInfo)//si es verdadero ahora le manda el peros al jtext tamanio
            {
                peso = Integer.parseInt(jtextTamanio.getText());
            }
        } else
        {
            validaInfo = Metodos.validaCamposVacios(jtextNombreYExt.getText());
        }

        if (validaInfo)
        {
            String ruta = "C:\\" + Metodos.despliegaRuta(Metodos.concatenarStrings());
            if (jtextTamanio.isEnabled())//Se está insertando un archivo
            {
                if (Metodos.validaNombreExtencion(jtextNombreYExt.getText()))
                {
                    Archivo ar = creaArchivo(jtextNombreYExt.getText(),
                            cadenaRadio, ruta,
                            peso);
                    NodoLista<Archivo> archi = new NodoLista(ar.getNombre(), ar);
                    if (!Metodos.verificaArchivosRegistrados(archi.getObj().getNombre(), 'A', (NodoLista) VtnPrincipal.nodoSeleccionado.getUserObject()))
                    {
                        NodoLista<Archivo> nodo = (NodoLista<Archivo>) nodoSeleccionado.getUserObject();
                        if (nodo != null)
                        {
                            if (nodo.getObj() != null)
                            {
                                if (nodo.getObj().getTamanio() < 2000000)
                                {
                                    Metodos.insertaCarpetasArchivos(archi);
                                    this.dispose();
                                } else
                                {
                                    JOptionPane.showMessageDialog(null, "Has excedido el tamanio permitido en una carpeta", "Error", JOptionPane.ERROR_MESSAGE);
                                }

                            } else
                            {
                                Metodos.insertaCarpetasArchivos(archi);
                                this.dispose();
                            }
                        }

                    } else
                    {
                        JOptionPane.showMessageDialog(null, "El nombre del archivo ya se encuentra registrado", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else
                {
                    JOptionPane.showMessageDialog(null, "Coloca el archivo con un nombre y extensión valido", "Error", JOptionPane.ERROR_MESSAGE);
                    jtextNombreYExt.setText("");
                }
            } else
            {
                //Registrando una carpeta
                //Este if es en caso de que sea carpeta el archivo que se está registrando
                if (!Metodos.verificaArchivosRegistrados(jtextNombreYExt.getText(), 'C', (NodoLista) VtnPrincipal.nodoSeleccionado.getUserObject()))
                {

                    Archivo ar = creaArchivo(jtextNombreYExt.getText(),
                            cadenaRadio, ruta,
                            peso);
                    NodoLista<Archivo> archi = new NodoLista(ar.getNombre(), ar);
                    
                    NodoLista<Archivo> nodo = (NodoLista<Archivo>) nodoSeleccionado.getUserObject();
                    if (nodo != null)
                    {
                        if (nodo.getObj() != null)
                        {
                            if (nodo.getObj().getTamanio() < 2000000)
                            {
                                Metodos.insertaCarpetasArchivos(archi);
                                this.dispose();
                            } else
                            {
                                JOptionPane.showMessageDialog(null, "Has excedido el tamanio permitido en una carpeta", "Error", JOptionPane.ERROR_MESSAGE);
                            }

                        } else
                        {
                            Metodos.insertaCarpetasArchivos(archi);
                            this.dispose();
                        }
                    }

                } else
                {
                    JOptionPane.showMessageDialog(null, "El nombre de la carpeta ya se encuentra registrado", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else
        {
            JOptionPane.showMessageDialog(null, "Favor de llenar todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static Archivo creaArchivo(String nombreExtension, char tipo, String ruta, int tamanio)
    {
        String arr[] = new String[2];//arreglo para guardar [0]= nombre [1]=extension
        arr = separa(nombreExtension);
        // Obtener el nombre de usuario de la computadora
        String nombreUsuario = System.getProperty("user.name");
        // Obtener la fecha actual
        LocalDate fecha = LocalDate.now();
        // Formatear la fecha en un formato legible (por ejemplo, "dd-MM-yyyy")
        String fechaString = fecha.format(DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        Archivo nvoArchivo = null;
        if (tipo == 'C')
        {
            nvoArchivo = new Archivo(nombreExtension, "", fechaString, nombreUsuario, tipo, 0, ruta);
        } else
        {
            nvoArchivo = new Archivo(arr[0], arr[1], fechaString, nombreUsuario, tipo, tamanio, ruta);
        }

        return nvoArchivo;
    }

    public static String[] separa(String texto)
    {
        String separados[] = new String[2];
        for (int i = 0; i < texto.length(); i++)
        {
            if (texto.charAt(i) == '.')
            {
                separados[0] = texto.substring(0, i);
                separados[1] = texto.substring(i + 1, texto.length());
                break;
            }
        }
        return separados;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(VtnFormularioArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(VtnFormularioArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(VtnFormularioArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(VtnFormularioArchivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                VtnFormularioArchivo dialog = new VtnFormularioArchivo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter()
                {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e)
                    {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JRadioButton btnRadioA;
    private javax.swing.JRadioButton btnRadioC;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanelFondo;
    private javax.swing.JTextField jtextNombreYExt;
    private javax.swing.JTextField jtextTamanio;
    // End of variables declaration//GEN-END:variables
}
